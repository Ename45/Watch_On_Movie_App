Index: src/test/java/services/WatchOnAdminServicesTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package services;\r\n\r\nimport data.models.Movie;\r\nimport data.models.User;\r\nimport data.repositories.MovieRepository;\r\nimport data.repositories.UserRepository;\r\nimport data.repositories.WatchOnMovieRepository;\r\nimport data.repositories.WatchOnUserRepository;\r\nimport dto.requests.LoginRequest;\r\nimport dto.requests.NewMovieDetailsRequest;\r\nimport dto.requests.ShareMovieRequest;\r\nimport dto.requests.SignUpRequest;\r\nimport dto.responses.LoginResponse;\r\nimport dto.responses.MovieAddedToDatabaseResponse;\r\nimport dto.responses.MovieSharedResponse;\r\nimport org.junit.jupiter.api.AfterEach;\r\nimport org.junit.jupiter.api.BeforeEach;\r\nimport org.junit.jupiter.api.DisplayName;\r\nimport org.junit.jupiter.api.Test;\r\nimport java.time.LocalDateTime;\r\nimport static org.junit.jupiter.api.Assertions.*;\r\n\r\nclass WatchOnAdminServicesTest {\r\n    User user;\r\n    AdminServices adminServices;\r\n    UserServices userServices;\r\n    MovieServices movieServices;\r\n    SignUpRequest signUpRequest;\r\n    LoginRequest loginRequest;\r\n    LoginResponse loginResponse;\r\n    MovieRepository movieRepository;\r\n    Movie movie;\r\n    NewMovieDetailsRequest newMovieDetailsRequest;\r\n    UserRepository userRepository;\r\n\r\n    @BeforeEach\r\n    void setUp() {\r\n        user = new User();\r\n        adminServices = new WatchOnAdminServices();\r\n        signUpRequest = new SignUpRequest();\r\n        loginRequest = new LoginRequest();\r\n        loginResponse = new LoginResponse();\r\n        userRepository = new WatchOnUserRepository();\r\n        userServices = new WatchOnUserServices();\r\n        movieServices = new WatchOnMovieServices();\r\n        movie = new Movie();\r\n        movieRepository = new WatchOnMovieRepository();\r\n        newMovieDetailsRequest = new NewMovieDetailsRequest();\r\n    }\r\n\r\n    @AfterEach\r\n    void tearDown(){\r\n        movieRepository.deleteAll();\r\n        userRepository.deleteAll();\r\n    }\r\n\r\n        @Test\r\n        @DisplayName(\"Only an Admin can save a Movie to the Database Test\")\r\n        public void anAdminCanAddAMovieTest() {\r\n            signUpRequest.setFullName(\"Inemesit Udousoro\");\r\n            signUpRequest.setEmail(\"ename@gmail.com\");\r\n            signUpRequest.setPassword(\"wOc1472xxX\");\r\n\r\n            userServices.signUp(signUpRequest);\r\n\r\n            loginRequest.setEmail(\"ename@gmail.com\");\r\n            loginRequest.setPassword(\"wOc1472xxX\");\r\n            LoginResponse loginResponse = userServices.login(loginRequest);\r\n\r\n            NewMovieDetailsRequest newMovieDetailsRequest = new NewMovieDetailsRequest();\r\n\r\n            newMovieDetailsRequest.setUserId(loginResponse.getId());\r\n\r\n            MovieAddedToDatabaseResponse response = adminServices.addMovieToDatabase(newMovieDetailsRequest);\r\n\r\n            assertEquals(\"Movie added to the database successfully\", response.getMessage());\r\n        }\r\n\r\n    @Test\r\n    @DisplayName(\"A User role cannot save Movie to the Database Test\")\r\n    public void anUserCannotAddAMovieTest() {\r\n        signUpRequest.setFullName(\"Inemesit Udousoro\");\r\n        signUpRequest.setEmail(\"ename@gmail.com\");\r\n        signUpRequest.setPassword(\"In3m.\");\r\n\r\n        userServices.signUp(signUpRequest);\r\n\r\n        loginRequest.setEmail(\"ename@gmail.com\");\r\n        loginRequest.setPassword(\"In3m.\");\r\n        LoginResponse loginResponse = userServices.login(loginRequest);\r\n\r\n        NewMovieDetailsRequest newMovieDetailsRequest = new NewMovieDetailsRequest();\r\n\r\n        newMovieDetailsRequest.setUserId(loginResponse.getId());\r\n\r\n        MovieAddedToDatabaseResponse response = adminServices.addMovieToDatabase(newMovieDetailsRequest);\r\n\r\n        assertEquals(\"User does not have admin privileges to add movies to the database\", response.getMessage());\r\n        }\r\n\r\n    @Test\r\n    @DisplayName(\"Only an Admin can delete movie from platform\")\r\n    public void adminCanDeleteMovieFromDatabaseTest(){\r\n        signUpRequest.setFullName(\"Inemesit Udousoro\");\r\n        signUpRequest.setEmail(\"ename@gmail.com\");\r\n        signUpRequest.setPassword(\"wOc1472xxX\");\r\n\r\n        userServices.signUp(signUpRequest);\r\n\r\n        loginRequest.setEmail(\"ename@gmail.com\");\r\n        loginRequest.setPassword(\"wOc1472xxX\");\r\n\r\n        loginResponse = userServices.login(loginRequest);\r\n\r\n        newMovieDetailsRequest.setUserId(loginResponse.getId());\r\n\r\n        newMovieDetailsRequest.setMovieName(\"Spy\");\r\n        newMovieDetailsRequest.setGenre(\"Action\");\r\n        newMovieDetailsRequest.setYear(LocalDateTime.now().withYear(2023));\r\n        newMovieDetailsRequest.setProducer(\"John Aisle\");\r\n\r\n        adminServices.addMovieToDatabase(newMovieDetailsRequest);\r\n\r\n        Movie foundMovie = adminServices.findAllMovies().get(0);\r\n\r\n        adminServices.deleteMovieFromDatabaseById(foundMovie.getMovieId());\r\n\r\n        assertEquals(0, userServices.findAllMovies().size());\r\n    }\r\n\r\n    @Test\r\n    public void shareMovieTest(){\r\n        signUpRequest.setFullName(\"Inemesit Udousoro\");\r\n        signUpRequest.setEmail(\"ename@gmail.com\");\r\n        signUpRequest.setPassword(\"wOc1472xxX\");\r\n        userServices.signUp(signUpRequest);\r\n\r\n        loginRequest.setEmail(\"ename@gmail.com\");\r\n        loginRequest.setPassword(\"wOc1472xxX\");\r\n        loginResponse = userServices.login(loginRequest);\r\n        newMovieDetailsRequest.setUserId(loginResponse.getId());\r\n\r\n        newMovieDetailsRequest.setMovieName(\"Spy Girls\");\r\n        newMovieDetailsRequest.setGenre(\"Action\");\r\n        newMovieDetailsRequest.setYear(LocalDateTime.now().withYear(2023));\r\n        newMovieDetailsRequest.setProducer(\"John Aisle\");\r\n        adminServices.addMovieToDatabase(newMovieDetailsRequest);\r\n\r\n        SignUpRequest signUpRequest2 = new SignUpRequest();\r\n        signUpRequest2.setFullName(\"Philo Udousoro\");\r\n        signUpRequest2.setEmail(\"philo@gmail.com\");\r\n        signUpRequest2.setPassword(\"In3m.\");\r\n        userServices.signUp(signUpRequest2);\r\n\r\n        LoginRequest loginRequest2 = new LoginRequest();\r\n        loginRequest2.setEmail(\"philo@gmail.com\");\r\n        loginRequest2.setPassword(\"Ph1o.\");\r\n        LoginResponse loginResponse2 = new LoginResponse();\r\n        loginResponse2 = userServices.login(loginRequest2);\r\n\r\n        SignUpRequest signUpRequest3 = new SignUpRequest();\r\n        signUpRequest3.setFullName(\"John Udousoro\");\r\n        signUpRequest3.setEmail(\"john@gmail.com\");\r\n        signUpRequest3.setPassword(\"Jo3n.\");\r\n        userServices.signUp(signUpRequest3);\r\n\r\n        LoginRequest loginRequest3 = new LoginRequest();\r\n        loginRequest3.setEmail(\"ename@gmail.com\");\r\n        loginRequest3.setPassword(\"In3m.\");\r\n        LoginResponse loginResponse3 = new LoginResponse();\r\n        loginResponse3 = userServices.login(loginRequest3);\r\n\r\n        ShareMovieRequest shareMovieRequest = new ShareMovieRequest();\r\n        shareMovieRequest.setSenderId(loginResponse2.getId());\r\n        User receiver = userServices.findUserById(loginResponse3.getId());\r\n        shareMovieRequest.setReceiverId(receiver.getUserId());\r\n        shareMovieRequest.setMovieId(movieServices.findMovieByName(\"Spy Girls\").getMovieId());\r\n        MovieSharedResponse movieSharedResponse = adminServices.shareAMovie(shareMovieRequest);\r\n\r\n        assertEquals(\"sent movie to\" + receiver.getFullName(), movieSharedResponse.getMessage());\r\n        assertEquals(1, receiver.getSharedMovies().size());\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/services/WatchOnAdminServicesTest.java b/src/test/java/services/WatchOnAdminServicesTest.java
--- a/src/test/java/services/WatchOnAdminServicesTest.java	(revision 6356258838f42af88683cade8af8c4d6fffb7568)
+++ b/src/test/java/services/WatchOnAdminServicesTest.java	(date 1686536142820)
@@ -154,7 +154,7 @@
 
         LoginRequest loginRequest2 = new LoginRequest();
         loginRequest2.setEmail("philo@gmail.com");
-        loginRequest2.setPassword("Ph1o.");
+        loginRequest2.setPassword("In3m.");
         LoginResponse loginResponse2 = new LoginResponse();
         loginResponse2 = userServices.login(loginRequest2);
 
@@ -165,8 +165,8 @@
         userServices.signUp(signUpRequest3);
 
         LoginRequest loginRequest3 = new LoginRequest();
-        loginRequest3.setEmail("ename@gmail.com");
-        loginRequest3.setPassword("In3m.");
+        loginRequest3.setEmail("john@gmail.com");
+        loginRequest3.setPassword("Jo3n.");
         LoginResponse loginResponse3 = new LoginResponse();
         loginResponse3 = userServices.login(loginRequest3);
 
Index: src/main/java/services/WatchOnUserServices.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package services;\r\n\r\nimport com.sun.jdi.request.DuplicateRequestException;\r\nimport data.models.Movie;\r\nimport data.models.Role;\r\nimport data.models.User;\r\nimport data.repositories.*;\r\nimport dto.requests.LoginRequest;\r\nimport dto.requests.ShareMovieRequest;\r\nimport dto.requests.SignUpRequest;\r\nimport dto.responses.*;\r\nimport java.util.List;\r\nimport java.util.regex.Matcher;\r\nimport java.util.regex.Pattern;\r\n\r\npublic class WatchOnUserServices implements UserServices{\r\n    private static final UserRepository userRepository = new WatchOnUserRepository();\r\n    MovieServices movieServices = new WatchOnMovieServices();\r\n    private static final String passwordRegex = \"^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[!.@#&()–{}:;',?/*~$^+=<>])\" +\r\n            \".{5,20}$\";\r\n    private static final String emailRegex = \"^(?=.{1,64}@)[\\\\p{L}0-9+_-]+(\\\\.[\\\\p{L}0-9+_-]+)*@\"\r\n            + \"[^-][\\\\p{L}0-9+-]+(\\\\.[\\\\p{L}0-9+-]+)*(\\\\.\\\\p{L}{2,})$\";\r\n\r\n    private static final String companyPasswordRegex = \"^wOc1\\\\d{2}2xxX$\";\r\n\r\n    static Pattern passwordPattern = Pattern.compile(passwordRegex);\r\n    static Pattern emailPattern = Pattern.compile(emailRegex);\r\n    static Pattern companyPasswordPattern = Pattern.compile(companyPasswordRegex);\r\n\r\n    @Override\r\n    public SignUpResponse signUp(SignUpRequest signUpRequest) {\r\n        String name = signUpRequest.getFullName();\r\n        String email = signUpRequest.getEmail();\r\n        String password = signUpRequest.getPassword();\r\n\r\n        emailValidator(email);\r\n        checkThatUserIsNotSignedUp(name, email);\r\n\r\n        passwordValidator(password);\r\n\r\n        User user = setDetailsOfNewUser(name, email, password);\r\n        if (companyPasswordPattern.matcher(password).matches()) {\r\n            user.setRole(Role.ADMIN);\r\n        } else {\r\n            user.setRole(Role.USER);\r\n        }\r\n\r\n        userRepository.save(user);\r\n        return getSignUpResponse();\r\n    }\r\n\r\n\r\n    @Override\r\n    public LoginResponse login(LoginRequest loginRequest) {\r\n        String email = loginRequest.getEmail();\r\n        String password = loginRequest.getPassword();\r\n\r\n        User user = userRepository.findByEmail(email);\r\n\r\n        throwExceptionIfNotSignedUp(user);\r\n        verifyThatPasswordMatchesExistingUser(password, user);\r\n\r\n        return getLoginResponse(user);\r\n    }\r\n\r\n    @Override\r\n    public List<Movie> findAllMovies() {\r\n        return movieServices.findAllMovies();\r\n    }\r\n    @Override\r\n    public Movie findMovieByName(String movieName) {\r\n        return movieServices.findMovieByName(movieName);\r\n    }\r\n\r\n    @Override\r\n    public User findUserById(String userId) {\r\n        return userRepository.findById(userId);\r\n    }\r\n\r\n    @Override\r\n    public User findUserByUserName(String userName) {\r\n        return userRepository.findByName(userName);\r\n    }\r\n\r\n    @Override\r\n    public User findByEmail(String email) {\r\n        return userRepository.findByEmail(email);\r\n    }\r\n\r\n    @Override\r\n    public MovieAddedToUserListResponse addMovieToUserList(String movieName, User foundUser) {\r\n        Movie movie = findMovieByName(movieName);\r\n        String movieId = movie.getMovieId();\r\n\r\n        if (movieId == null) {\r\n            throw new IllegalArgumentException(\"Movie not found.\");\r\n        }\r\n\r\n        foundUser.addMovieToList(movieId);\r\n        userRepository.save(foundUser);\r\n\r\n        MovieAddedToUserListResponse movieAddedToUserListResponse = new MovieAddedToUserListResponse();\r\n        movieAddedToUserListResponse.setMessage(\"Movie added to your list.\");\r\n\r\n        return movieAddedToUserListResponse;\r\n    }\r\n\r\n//    @Override\r\n//    public MovieSharedResponse share(ShareMovieRequest shareMovieRequest) {\r\n//        return adminServices.shareAMovie(shareMovieRequest);\r\n//    }\r\n\r\n    @Override\r\n    public DeleteFromUserListResponse deleteMovieFromUserListById(String movieId, User currentUser) {\r\n        currentUser.removeMovieFromList(movieId);\r\n\r\n        DeleteFromUserListResponse deleteFromUserListResponse = new DeleteFromUserListResponse();\r\n        deleteFromUserListResponse.setMessage(\"Movie removed from your list.\");\r\n        return deleteFromUserListResponse;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    private static void emailValidator(String email) {\r\n        Matcher matcher = emailPattern.matcher(email);\r\n        if (!matcher.matches()){\r\n            throw new IllegalArgumentException(\"Invalid email address\");\r\n        }\r\n    }\r\n\r\n    private static void userPasswordValidator(String password) {\r\n        Matcher matcher = passwordPattern.matcher(password);\r\n        if (!matcher.matches()){\r\n            throw new IllegalArgumentException(\"Password should have at least 1(capital letter, \" +\r\n                    \"small letter, number, and a special character). Should be 5 characters or more.\");\r\n        }\r\n    }\r\n\r\n    private static void passwordValidator(String password) {\r\n        Matcher matcher = companyPasswordPattern.matcher(password);\r\n        if (!matcher.matches()){\r\n            userPasswordValidator(password);\r\n        }\r\n    }\r\n\r\n    private void checkThatUserIsNotSignedUp(String name, String email) {\r\n        if (userRepository.findByName(name) != null && userRepository.findByEmail(email) != null){\r\n                throw new DuplicateRequestException(\"User already registered. Login instead\");\r\n        }\r\n    }\r\n\r\n    private static User setDetailsOfNewUser(String name, String email, String password) {\r\n        User user = new User();\r\n        user.setFullName(name);\r\n        user.setEmail(email);\r\n        user.setPassword(password);\r\n        return user;\r\n    }\r\n\r\n    private static SignUpResponse getSignUpResponse() {\r\n        SignUpResponse signUpResponse = new SignUpResponse();\r\n        signUpResponse.setMessage(\"Sign Up successful. Check your email for a link to login\");\r\n        return signUpResponse;\r\n    }\r\n\r\n\r\n    private static void throwExceptionIfNotSignedUp(User user) {\r\n        if (user == null){\r\n            throw new IllegalArgumentException(\"Access denied: User is not signed up to this app\");\r\n        }\r\n    }\r\n\r\n    private static void verifyThatPasswordMatchesExistingUser(String password, User user) {\r\n        if (!password.equals(user.getPassword())){\r\n            throw new IllegalArgumentException(\"Invalid Password.\");\r\n        }\r\n    }\r\n\r\n    private static LoginResponse getLoginResponse(User user) {\r\n        LoginResponse loginResponse = new LoginResponse();\r\n        loginResponse.setMessage(\"Logged in.\");\r\n        loginResponse.setEmail(user.getEmail());\r\n        loginResponse.setFullName(user.getFullName());\r\n        loginResponse.setMovieId(List.of(\"...movies\"));\r\n        loginResponse.setRole(user.getRole());\r\n        loginResponse.setId(user.getUserId());\r\n        return loginResponse;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/services/WatchOnUserServices.java b/src/main/java/services/WatchOnUserServices.java
--- a/src/main/java/services/WatchOnUserServices.java	(revision 6356258838f42af88683cade8af8c4d6fffb7568)
+++ b/src/main/java/services/WatchOnUserServices.java	(date 1686536947593)
@@ -16,6 +16,7 @@
 public class WatchOnUserServices implements UserServices{
     private static final UserRepository userRepository = new WatchOnUserRepository();
     MovieServices movieServices = new WatchOnMovieServices();
+//    AdminServices adminServices = new WatchOnAdminServices();
     private static final String passwordRegex = "^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[!.@#&()–{}:;',?/*~$^+=<>])" +
             ".{5,20}$";
     private static final String emailRegex = "^(?=.{1,64}@)[\\p{L}0-9+_-]+(\\.[\\p{L}0-9+_-]+)*@"
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"89e08033-c36e-40bb-8bba-f6a0c0b6db0d\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/services/WatchOnUserServices.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/services/WatchOnUserServices.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"JUnit5 Test Class\" />\r\n        <option value=\"Enum\" />\r\n        <option value=\"Interface\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"useMavenConfig\" value=\"true\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2PPesgDDeBryYREvAg15AeSiXt1\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,\r\n    &quot;ASKED_SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary&quot;: &quot;JUnit5&quot;,\r\n    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5&quot;: &quot;&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/USER/IdeaProjects/WatchOn&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;project.propGUI&quot;,\r\n    &quot;spring.configuration.checksum&quot;: &quot;f39d7c936ad6a450bf15c6175bf5203d&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CreateClassDialog.RecentsKey\">\r\n      <recent name=\"dto.requests\" />\r\n      <recent name=\"dto.responses\" />\r\n    </key>\r\n    <key name=\"CreateTestDialog.Recents.Supers\">\r\n      <recent name=\"\" />\r\n    </key>\r\n    <key name=\"CreateTestDialog.RecentsKey\">\r\n      <recent name=\"services\" />\r\n      <recent name=\"data.repositories\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"JUnit.WatchOnUserServicesTest\">\r\n    <configuration name=\"WatchOnAdminServicesTest.shareMovieTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"WatchOn\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"services.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"services\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"services.WatchOnAdminServicesTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"shareMovieTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"WatchOnMovieRepositoryTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"WatchOn\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"data.repositories.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"data.repositories\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"data.repositories.WatchOnMovieRepositoryTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"WatchOnMovieRepositoryTest.saveOneMovie_IdCountIsNotNull\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"WatchOn\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"data.repositories.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"data.repositories\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"data.repositories.WatchOnMovieRepositoryTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"saveOneMovie_IdCountIsNotNull\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"WatchOnUserRepositoryTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"WatchOn\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"data.repositories.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"data.repositories\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"data.repositories.WatchOnUserRepositoryTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"WatchOnUserServicesTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"WatchOn\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"services.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"services\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"services.WatchOnUserServicesTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"JUnit.WatchOnUserServicesTest\" />\r\n        <item itemvalue=\"JUnit.WatchOnUserRepositoryTest\" />\r\n        <item itemvalue=\"JUnit.WatchOnMovieRepositoryTest\" />\r\n        <item itemvalue=\"JUnit.WatchOnMovieRepositoryTest.saveOneMovie_IdCountIsNotNull\" />\r\n        <item itemvalue=\"JUnit.WatchOnAdminServicesTest.shareMovieTest\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"89e08033-c36e-40bb-8bba-f6a0c0b6db0d\" name=\"Changes\" comment=\"\" />\r\n      <created>1683363365499</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1683363365499</updated>\r\n      <workItem from=\"1683363366934\" duration=\"26014000\" />\r\n      <workItem from=\"1683452460501\" duration=\"20637000\" />\r\n      <workItem from=\"1683516076895\" duration=\"87899000\" />\r\n      <workItem from=\"1684731949119\" duration=\"172000\" />\r\n      <workItem from=\"1684820680552\" duration=\"48000\" />\r\n      <workItem from=\"1684820791499\" duration=\"926000\" />\r\n      <workItem from=\"1684822648515\" duration=\"19242000\" />\r\n      <workItem from=\"1685416478640\" duration=\"118257000\" />\r\n      <workItem from=\"1686279252487\" duration=\"48804000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 6356258838f42af88683cade8af8c4d6fffb7568)
+++ b/.idea/workspace.xml	(date 1686536811871)
@@ -6,7 +6,7 @@
   <component name="ChangeListManager">
     <list default="true" id="89e08033-c36e-40bb-8bba-f6a0c0b6db0d" name="Changes" comment="">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/services/WatchOnUserServices.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/services/WatchOnUserServices.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/test/java/services/WatchOnAdminServicesTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/services/WatchOnAdminServicesTest.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -71,8 +71,8 @@
       <recent name="data.repositories" />
     </key>
   </component>
-  <component name="RunManager" selected="JUnit.WatchOnUserServicesTest">
-    <configuration name="WatchOnAdminServicesTest.shareMovieTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
+  <component name="RunManager" selected="JUnit.WatchOnAdminServicesTest">
+    <configuration name="WatchOnAdminServicesTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
       <module name="WatchOn" />
       <extension name="coverage">
         <pattern>
@@ -82,28 +82,28 @@
       </extension>
       <option name="PACKAGE_NAME" value="services" />
       <option name="MAIN_CLASS_NAME" value="services.WatchOnAdminServicesTest" />
-      <option name="METHOD_NAME" value="shareMovieTest" />
-      <option name="TEST_OBJECT" value="method" />
+      <option name="TEST_OBJECT" value="class" />
       <method v="2">
         <option name="Make" enabled="true" />
       </method>
     </configuration>
-    <configuration name="WatchOnMovieRepositoryTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
+    <configuration name="WatchOnAdminServicesTest.shareMovieTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
       <module name="WatchOn" />
       <extension name="coverage">
         <pattern>
-          <option name="PATTERN" value="data.repositories.*" />
+          <option name="PATTERN" value="services.*" />
           <option name="ENABLED" value="true" />
         </pattern>
       </extension>
-      <option name="PACKAGE_NAME" value="data.repositories" />
-      <option name="MAIN_CLASS_NAME" value="data.repositories.WatchOnMovieRepositoryTest" />
-      <option name="TEST_OBJECT" value="class" />
+      <option name="PACKAGE_NAME" value="services" />
+      <option name="MAIN_CLASS_NAME" value="services.WatchOnAdminServicesTest" />
+      <option name="METHOD_NAME" value="shareMovieTest" />
+      <option name="TEST_OBJECT" value="method" />
       <method v="2">
         <option name="Make" enabled="true" />
       </method>
     </configuration>
-    <configuration name="WatchOnMovieRepositoryTest.saveOneMovie_IdCountIsNotNull" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
+    <configuration name="WatchOnMovieRepositoryTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
       <module name="WatchOn" />
       <extension name="coverage">
         <pattern>
@@ -113,8 +113,7 @@
       </extension>
       <option name="PACKAGE_NAME" value="data.repositories" />
       <option name="MAIN_CLASS_NAME" value="data.repositories.WatchOnMovieRepositoryTest" />
-      <option name="METHOD_NAME" value="saveOneMovie_IdCountIsNotNull" />
-      <option name="TEST_OBJECT" value="method" />
+      <option name="TEST_OBJECT" value="class" />
       <method v="2">
         <option name="Make" enabled="true" />
       </method>
@@ -151,11 +150,11 @@
     </configuration>
     <recent_temporary>
       <list>
+        <item itemvalue="JUnit.WatchOnAdminServicesTest" />
         <item itemvalue="JUnit.WatchOnUserServicesTest" />
+        <item itemvalue="JUnit.WatchOnAdminServicesTest.shareMovieTest" />
         <item itemvalue="JUnit.WatchOnUserRepositoryTest" />
         <item itemvalue="JUnit.WatchOnMovieRepositoryTest" />
-        <item itemvalue="JUnit.WatchOnMovieRepositoryTest.saveOneMovie_IdCountIsNotNull" />
-        <item itemvalue="JUnit.WatchOnAdminServicesTest.shareMovieTest" />
       </list>
     </recent_temporary>
   </component>
@@ -175,7 +174,7 @@
       <workItem from="1684820791499" duration="926000" />
       <workItem from="1684822648515" duration="19242000" />
       <workItem from="1685416478640" duration="118257000" />
-      <workItem from="1686279252487" duration="48804000" />
+      <workItem from="1686279252487" duration="50767000" />
     </task>
     <servers />
   </component>
